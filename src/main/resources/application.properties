spring.application.name=portalweb
server.port=8080

spring.datasource.url=jdbc:mariadb://localhost:3306/portal?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf8mb4
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email

# JPA não altera o esquema; quem manda é o Flyway
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

# Pasta padrão do Flyway (ajuste se você usa outro caminho)
spring.flyway.locations=classpath:db/migration

# DevTools/Thymeleaf mais confortáveis em dev; em prod você pode sobrescrever
spring.thymeleaf.cache=false


